												import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

class MyFrame extends JFrame implements ActionListener{

	private JButton order_button, cancle_button, order2_button; 
	private JPanel down_panel, down_panel2, set1;
	private JTextField text;
	public static JTextField text2;
	private static int totalPrice = 0;
	private int TypePrice = 0;
	private int tastePrice = 0;
	private int extraPrice = 0;

	WelcomePanel welcom_panel = new WelcomePanel();
	TypePanel TypePanel = new TypePanel();
	
	TastePanel TastePanel = new TastePanel();
	SizePanel SizePanel = new SizePanel();
	TakeoutPanel TakeoutPanel = new TakeoutPanel();
	public static int getPrice()
	{
		return totalPrice;
	}

	public MyFrame() { 

		this.setSize(500, 400);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setTitle("피자 주문"); 

		this.order_button = new JButton("계산"); 
		this.order_button.addActionListener(this); 
	
		this.cancle_button = new JButton("취소"); 
		this.cancle_button.addActionListener(this);
		
		this.text = new JTextField(); 
		text.setEditable(false); 
		text.setColumns(6); 

		down_panel = new JPanel(); 
		down_panel2 = new JPanel();
		set1 = new JPanel();
		
		down_panel.add(this.order_button);
		down_panel.add(this.cancle_button);
		down_panel.add(this.text);
		
		set1.add(down_panel2);
		set1.add(down_panel);
		
		set1.setLayout(new BorderLayout()); 
		set1.add(down_panel2, BorderLayout.NORTH); 
		set1.add(down_panel, BorderLayout.SOUTH); 
		
		this.setLayout(new BorderLayout()); 

		this.add(welcom_panel, BorderLayout.NORTH);
		this.add(set1, BorderLayout.SOUTH);
		this.add(SizePanel, BorderLayout.EAST); 
		this.add(TypePanel, BorderLayout.WEST); 
		this.add(TastePanel, BorderLayout.CENTER); 
		
		pack();	
		this.setVisible(true); 
		this.setResizable(false);
	}

	public void actionPerformed(ActionEvent e) { 

	    
	    totalPrice=TypePrice  + extraPrice + tastePrice;
	    
	    if (e.getSource() == this.order_button) { 
			this.text.setText(""+ getPrice()); 
		}
	    if (e.getSource() == this.cancle_button) { 
			this.text.setText(""); 
			this.text2.setText("주소를 입력하세요.");
		}
	    if (e.getSource() == this.order2_button) { 
	    	MyFrame2 mf2 = new MyFrame2();
		}
	    
	}

	class WelcomePanel extends JPanel {
		private JLabel message; 

		public WelcomePanel() {
			message = new JLabel("자바 피자에 오신것을 환영합니다.");
			add(message); 
		}
	}

	class TypePanel extends JPanel implements ActionListener{ 
		private JRadioButton PremiumSpecial, Premium, Original;
		private ButtonGroup bg; 
		
		public TypePanel() { 
			setLayout(new GridLayout(3, 1)); 

			PremiumSpecial = new JRadioButton("PremiumSpecial"); 
			Premium = new JRadioButton("Premium");
			Original = new JRadioButton("Original");

			bg = new ButtonGroup(); 
			bg.add(PremiumSpecial);
			bg.add(Premium);
			bg.add(Original);
			
			PremiumSpecial.addActionListener(this);
			Premium.addActionListener(this);
			Original.addActionListener(this);
			
			setBorder(BorderFactory.createTitledBorder("종류")); 

			add(PremiumSpecial); 
			add(Premium);
			add(Original);
		}

		@Override
		public void actionPerformed(ActionEvent e) {
			Object source = e.getSource();

		    if (source == PremiumSpecial)
		    {
		    	TypePrice  = 5000;
		    }
		    else if (source == Premium)
		    {
		    	TypePrice  = 3000;
		    }
		    else if (source == Original)
		    {
		    	TypePrice  = 0;
		    }
			
		}

		
	}

	class TastePanel extends JPanel implements ItemListener{ 
		private JCheckBox Combination, Vegetarian, Garden, MeatLovers, SeaFood; 

		public TastePanel() {
			setLayout(new GridLayout(4, 1)); 

			Combination = new JCheckBox("Combination");
			Vegetarian = new JCheckBox("Vegetarian");
			Garden = new JCheckBox("Garden");
			MeatLovers = new JCheckBox("MeatLovers");
			SeaFood = new JCheckBox("SeaFood");

			setBorder(BorderFactory.createTitledBorder("피자맛"));

			add(Combination); 
			add(Vegetarian);
			add(Garden);
			add(MeatLovers);
			add(SeaFood);
			Combination.addItemListener(this);
			Vegetarian.addItemListener(this);
			Garden.addItemListener(this);
			MeatLovers.addItemListener(this);
			SeaFood.addItemListener(this);
		}

		@Override
		public void itemStateChanged(ItemEvent e) {
			Object source = e.getItemSelectable();
		    if (source == Combination)
		    {
		    	if (e.getStateChange() == ItemEvent.SELECTED)
		    	{
		    		tastePrice  += 10000;
		        }
		    	else
		    	{
		    		tastePrice  -= 10000;
		        }
		    }
		    else if (source ==  Vegetarian){
		    	if (e.getStateChange() == ItemEvent.SELECTED)
		    	{
		    		tastePrice += 11000;
		        }
		    	else{
		    		tastePrice  -= 11000;
		        }
		    }
		    else if (source == Garden)
		    {
		    	if (e.getStateChange() == ItemEvent.SELECTED)
		    	{
		    		tastePrice  += 12000;
		        }
		    	else
		    	{
		    		tastePrice  -= 12000;
		        }
		    }
		    else if (source == MeatLovers)
		    {
		    	if (e.getStateChange() == ItemEvent.SELECTED)
		    	{
		    		tastePrice += 13000;
		        }
		    	else
		    	{
		    		tastePrice  -= 13000;
		        }
		    }
		    else if (source == SeaFood)
			    {
			    	if (e.getStateChange() == ItemEvent.SELECTED)
			    	{
			    		tastePrice  += 15000;
			        }
			    	else
			    	{
			    		tastePrice -= 15000;
			        }	    	  	
			}
			
		    }
	}


	class SizePanel extends JPanel implements ActionListener{ 
		private JRadioButton Cola, Sprite;
		private ButtonGroup bg;

		public SizePanel() { 
			setLayout(new GridLayout(3, 1));

			Cola = new JRadioButton("Cola");
			Sprite = new JRadioButton("Sprite");
			

			bg = new ButtonGroup();
			bg.add(Cola);
			bg.add(Sprite);
		
			
			setBorder(BorderFactory.createTitledBorder("크기"));

			add(Cola);
			add(Sprite);
		
			
			Cola.addActionListener(this);
			Sprite.addActionListener(this);
			
			
		}

		@Override
		public void actionPerformed(ActionEvent e) {
			Object source = e.getSource();

		    if (source == Cola)
		    {
		    	extraPrice = +500;
		    }
		    else if (source == Sprite)
		    {
		    	extraPrice= +700;
		    }
		   
		}
	}
	class TakeoutPanel extends JPanel implements ActionListener{ 
		private JRadioButton Delivery, Takeout;
		private ButtonGroup bg;

		public TakeoutPanel() { 
			setLayout(new GridLayout(3, 1));

			Delivery = new JRadioButton("Cola");
			Takeout = new JRadioButton("Sprite");
			

			bg = new ButtonGroup();
			bg.add(Delivery);
			bg.add(Takeout);
		
			
			setBorder(BorderFactory.createTitledBorder("크기"));

			add(Delivery);
			add(Takeout);
		
			
			Delivery.addActionListener(this);
			Takeout.addActionListener(this);
			
			
		}

		@Override
		public void actionPerformed(ActionEvent e) {
			Object source = e.getSource();

		    if (source == Delivery)
		    {
		    	totalPrice = +2000;
		    }
		    else if (source == Takeout)
		    {
		    	totalPrice -= totalPrice*0.1;
		    }
		   
		}
	}
	}